1.	List the city, state, and zip codes in the customer table.  Your result should not have duplicates. (Hint: The DISTINCT keyword eliminates duplicates.)

SELECT DISTINCT CITY,STATE,ZIP
FROM CUSTOMER;

2.	List the name, department, phone number, and email address of employees with a phone number beginning with “3-”.

SELECT EMPNAME,DEPARTMENT,PHONE,EMAIL
FROM EMPLOYEE
WHERE PHONE LIKE '3-%';

3.	List all columns of the resource table with a rate between $10 and $20. Sort the result by rate.

SELECT *
FROM RESOURCETBL
WHERE RATE BETWEEN 10 AND 20 
ORDER BY RATE ASC;

4.	List the event requests with a status of “Approved” or “Denied” and an authorized date in July 2018. Include the event number, authorization date, and status in the output. (Hint: see the examples in Module 4 for date constants in Oracle and MySQL.)

SELECT EVENTNO,DATEAUTH,STATUS
FROM EVENTREQUEST
WHERE STATUS IN ("Approved","Denied")
	AND month(DATEAUTH)=7
	AND year(DATEAUTH)=2018;

5.	List the location number and name of locations that are part of the “Basketball arena”.  Your WHERE clause should not have a condition involving the facility number compared to a constant (“F101”). Instead, you should use a condition on the FacName column for the value of “Basketball arena”.

SELECT LOCNO,LOCNAME
FROM LOCATION INNER JOIN FACILITY ON LOCATION.FACNO=FACILITY.FACNO
WHERE FACNAME="Basketball arena";

6.	For each event plan, list the plan number, count of the event plan lines, and sum of the number of resources assigned.  For example, plan number “P100” has 4 lines and 7 resources assigned.  You only need to consider event plans that have at least one line.

SELECT EVENTPLAN.PLANNO,count(EVENTPLANLINE.PLANNO) AS num_planlines, sum(EVENTPLANLINE.NUMBERFLD) AS num_resources
FROM EVENTPLAN LEFT JOIN EVENTPLANLINE ON EVENTPLAN.PLANNO=EVENTPLANLINE.PLANNO
GROUP BY EVENTPLAN.PLANNO
HAVING num_planlines >= 1;
